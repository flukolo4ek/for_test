name: main
on:
  pull_request_target:
    types:
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
  workflow_dispatch:
    inputs:
      test_targets:
        default: "__ALL__"
        description: "Comma separated list to run pytest on, e.g.: `lib/dl_api_lib,lib/dl_core`. Use __ALL__ to run all tests"
      run_mypy_only:
        type: boolean
        default: false
        description: "Check to only run mypy"
      mypy_timeout_minutes:
        type: number
        default: 20
        description: "Timeout for pytest JOB in minutes"

jobs:
#  release_drafter:
#    runs-on: ubuntu-22.04
#    permissions:
#      contents: write
#      pull-requests: write
##    env:
##      GH_TOKEN: ${{ github.token }}
##      OWNER: ${{ github.repository_owner }}
##      REPO: ${{ github.event.repository.name }}
#    steps:
#      - name: print data
#        run: |
#          echo ${{ secrets.GITHUB_TOKEN }}
#          echo {{ secrets.GITHUB_TOKEN }}
#          echo ${{ github.token }}
#          echo {{ github.token }}
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: release-drafter/release-drafter@v6
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  multilabeler:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write
#    env:
#      GH_TOKEN: ${{ github.token }}
#      OWNER: ${{ github.repository_owner }}
#      REPO: ${{ github.event.repository.name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: fuxingloh/multi-labeler@v3

#  label-pr:
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: grafana/pr-labeler-action@v0.1.0
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}


